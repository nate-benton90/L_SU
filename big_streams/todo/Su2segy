#! /usr/bin/perl -w

# Program name: Su2segy.pl
# Purpose: To convert su data to segy data
# file names and locations are automatic
# Date: Oct. 15, 2011
# Author: Juan Lorenzo
# V. 1.0

# LOAD GENERAL PERL LIBRARY
   use lib './libAll';  

# Use shell transparently to locate home directory before compilation
   my $library_location;

   BEGIN {
     use Shell qw(echo);
     $home_directory = ` echo \$HOME`;
     chomp $home_directory;
     $library_location = $home_directory.'/lsu/libAll';
   }

# LOAD GENERAL PERL LIBRARY
  use lib $library_location;

# define library of system subroutines 
  use lib '/usr/local/pl';
  use manage_files_by;

# use local program parameter file
  use Su2segy qw ($file_name);

# define system library path
  use lib '/usr/local/pl/libAll';

# import system variables
  use SeismicUnix qw ($suffix_segy $suffix_su $suffix_usp);

# define local library path
  use lib '/usr/local/pl/libAll';
   use Project;
  my $Project = new Project();

# import system variables
  my ($DATA_SEISMIC_SEGY) = $Project->DATA_SEISMIC_SEGY();
  my ($DATA_SEISMIC_SU)   = $Project->DATA_SEISMIC_SU();

  $sufile_in[1]		= $file_name;

  $inbound_segyhdrs[1]	= $DATA_SEISMIC_SU.'/'.$sufile_in[1].$suffix_su;
  $outbound_segywrite[1]= $DATA_SEISMIC_SEGY.'/'.$sufile_in[1].$suffix_segy;

# DEFINE SU MODULES
  $segywrite[1]		= (" segywrite			\\
			bfile=$DATA_SEISMIC_SU/binary	\\
			hfile=$DATA_SEISMIC_SU/header	\\
			");

# create segy binary and ascii header using seismic unix file
  $segyhdrs[1]		= ("  segyhdrs  		\\
			bfile=$DATA_SEISMIC_SU/binary	\\
			hfile=$DATA_SEISMIC_SU/header	\\
			");

# DEFINE FLOW(S)
		$flow[1]  = (" $segyhdrs[1] 		\\
			< $inbound_segyhdrs[1]  |	\\
			$segywrite[1]			\\
			tape=$outbound_segywrite[1]	\\
		");
			 
# RUN FLOW(S)
 system $flow[1]; 
 system 'echo', $flow[1];
